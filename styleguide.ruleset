<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="StyleCop" Description="StyleCop RuleSet" ToolsVersion="15.0">
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp" RuleNamespace="Microsoft.CodeAnalysis.CSharp">
    <Rule Id="AD0001" Action="None" />
    <Rule Id="BC2007" Action="None" />
    <Rule Id="BC2034" Action="None" />
    <Rule Id="BC2038" Action="None" />
    <Rule Id="CS0078" Action="None" />
    <Rule Id="CS0105" Action="None" />
    <Rule Id="CS0108" Action="Error" /> <!-- don't hide inherited members without using new keyword -->
    <Rule Id="CS0109" Action="Error" /> <!-- don't use new if it doesn't override inherited members -->
    <Rule Id="CS0114" Action="Error" /> <!-- don't hide inherited members without using override -->
    <Rule Id="CS0162" Action="None" />
    <Rule Id="CS0164" Action="None" />
    <Rule Id="CS0168" Action="None" />
    <Rule Id="CS0183" Action="None" />
    <Rule Id="CS0184" Action="None" />
    <Rule Id="CS0197" Action="None" />
    <Rule Id="CS0219" Action="None" />
    <Rule Id="CS0251" Action="None" />
    <Rule Id="CS0252" Action="None" />
    <Rule Id="CS0253" Action="None" />
    <Rule Id="CS0278" Action="None" />
    <Rule Id="CS0279" Action="None" />
    <Rule Id="CS0280" Action="None" />
    <Rule Id="CS0282" Action="None" />
    <Rule Id="CS0419" Action="None" />
    <Rule Id="CS0420" Action="None" />
    <Rule Id="CS0435" Action="None" />
    <Rule Id="CS0436" Action="None" />
    <Rule Id="CS0437" Action="None" />
    <Rule Id="CS0440" Action="None" />
    <Rule Id="CS0458" Action="None" />
    <Rule Id="CS0464" Action="None" />
    <Rule Id="CS0465" Action="None" />
    <Rule Id="CS0469" Action="None" />
    <Rule Id="CS0472" Action="None" />
    <Rule Id="CS0473" Action="None" />
    <Rule Id="CS0612" Action="Warning" /> <!-- 'member' is obsolete -->
    <Rule Id="CS0618" Action="Warning" /> <!-- 'member' is obsolete: 'text' -->
    <Rule Id="CS0619" Action="Error" /> <!-- 'member' is obsolete: 'text' -->
    <Rule Id="CS0626" Action="None" />
    <Rule Id="CS0628" Action="None" />
    <Rule Id="CS0642" Action="None" />
    <Rule Id="CS0652" Action="None" />
    <Rule Id="CS0657" Action="None" />
    <Rule Id="CS0658" Action="None" />
    <Rule Id="CS0659" Action="None" />
    <Rule Id="CS0660" Action="None" />
    <Rule Id="CS0661" Action="None" />
    <Rule Id="CS0665" Action="None" />
    <Rule Id="CS0672" Action="None" />
    <Rule Id="CS0675" Action="None" />
    <Rule Id="CS0684" Action="None" />
    <Rule Id="CS0693" Action="None" />
    <Rule Id="CS0728" Action="None" />
    <Rule Id="CS0809" Action="None" />
    <Rule Id="CS0811" Action="None" />
    <Rule Id="CS0824" Action="None" />
    <Rule Id="CS1030" Action="None" />
    <Rule Id="CS1058" Action="None" />
    <Rule Id="CS1062" Action="None" />
    <Rule Id="CS1064" Action="None" />
    <Rule Id="CS1066" Action="None" />
    <Rule Id="CS1072" Action="None" />
    <Rule Id="CS1522" Action="None" />
    <Rule Id="CS1570" Action="None" />
    <Rule Id="CS1571" Action="None" />
    <Rule Id="CS1572" Action="None" />
    <Rule Id="CS1573" Action="None" />
    <Rule Id="CS1574" Action="None" />
    <Rule Id="CS1580" Action="None" />
    <Rule Id="CS1581" Action="None" />
    <Rule Id="CS1584" Action="None" />
    <Rule Id="CS1587" Action="None" />
    <Rule Id="CS1589" Action="None" />
    <Rule Id="CS1590" Action="None" />
    <Rule Id="CS1591" Action="None" />
    <Rule Id="CS1592" Action="None" />
    <Rule Id="CS1616" Action="None" />
    <Rule Id="CS1633" Action="None" />
    <Rule Id="CS1634" Action="None" />
    <Rule Id="CS1635" Action="None" />
    <Rule Id="CS1645" Action="None" />
    <Rule Id="CS1658" Action="None" />
    <Rule Id="CS1668" Action="None" />
    <Rule Id="CS1685" Action="None" />
    <Rule Id="CS1687" Action="None" />
    <Rule Id="CS1690" Action="None" />
    <Rule Id="CS1692" Action="None" />
    <Rule Id="CS1695" Action="None" />
    <Rule Id="CS1696" Action="None" />
    <Rule Id="CS1697" Action="None" />
    <Rule Id="CS1700" Action="None" />
    <Rule Id="CS1701" Action="None" />
    <Rule Id="CS1702" Action="None" />
    <Rule Id="CS1707" Action="None" /> <!--Allow underscores in member names (for unit test names)-->
    <Rule Id="CS1710" Action="None" />
    <Rule Id="CS1711" Action="None" />
    <Rule Id="CS1712" Action="None" />
    <Rule Id="CS1717" Action="None" />
    <Rule Id="CS1718" Action="None" />
    <Rule Id="CS1720" Action="None" />
    <Rule Id="CS1723" Action="None" />
    <Rule Id="CS1734" Action="None" />
    <Rule Id="CS1735" Action="None" />
    <Rule Id="CS1762" Action="None" />
    <Rule Id="CS1927" Action="None" />
    <Rule Id="CS1956" Action="None" />
    <Rule Id="CS1957" Action="None" />
    <Rule Id="CS1974" Action="None" />
    <Rule Id="CS1981" Action="None" />
    <Rule Id="CS1998" Action="None" />
    <Rule Id="CS2002" Action="None" />
    <Rule Id="CS3000" Action="None" />
    <Rule Id="CS3001" Action="None" />
    <Rule Id="CS3002" Action="None" />
    <Rule Id="CS3003" Action="None" />
    <Rule Id="CS3005" Action="None" />
    <Rule Id="CS3006" Action="None" />
    <Rule Id="CS3007" Action="None" />
    <Rule Id="CS3008" Action="None" />
    <Rule Id="CS3009" Action="None" />
    <Rule Id="CS3010" Action="None" />
    <Rule Id="CS3011" Action="None" />
    <Rule Id="CS3012" Action="None" />
    <Rule Id="CS3013" Action="None" />
    <Rule Id="CS3014" Action="None" />
    <Rule Id="CS3015" Action="None" />
    <Rule Id="CS3016" Action="None" />
    <Rule Id="CS3017" Action="None" />
    <Rule Id="CS3018" Action="None" />
    <Rule Id="CS3019" Action="None" />
    <Rule Id="CS3021" Action="None" />
    <Rule Id="CS3022" Action="None" />
    <Rule Id="CS3023" Action="None" />
    <Rule Id="CS3024" Action="None" />
    <Rule Id="CS3026" Action="None" />
    <Rule Id="CS3027" Action="None" />
    <Rule Id="CS4014" Action="Error" /> <!-- Async call is not awaited -->
    <Rule Id="CS4024" Action="None" />
    <Rule Id="CS4025" Action="None" />
    <Rule Id="CS4026" Action="None" />
    <Rule Id="CS7033" Action="None" />
    <Rule Id="CS7035" Action="None" />
    <Rule Id="CS7080" Action="None" />
    <Rule Id="CS7081" Action="None" />
    <Rule Id="CS7082" Action="None" />
    <Rule Id="CS7090" Action="None" />
    <Rule Id="CS7095" Action="None" />
    <Rule Id="CS8001" Action="None" />
    <Rule Id="CS8002" Action="None" />
    <Rule Id="CS8009" Action="None" />
    <Rule Id="CS8012" Action="None" />
    <Rule Id="CS8018" Action="None" />
    <Rule Id="CS8019" Action="Hidden" />
    <Rule Id="CS8020" Action="None" />
    <Rule Id="CS8021" Action="None" />
    <Rule Id="CS8029" Action="None" />
    <Rule Id="CS8032" Action="None" />
    <Rule Id="CS8033" Action="None" />
    <Rule Id="CS8034" Action="None" />
    <Rule Id="CS8040" Action="None" />
    <Rule Id="CS8073" Action="None" />
    <Rule Id="CS8094" Action="None" />
    <Rule Id="CS8105" Action="None" />
    <Rule Id="CS8123" Action="None" />
    <Rule Id="CS8305" Action="None" />
    <Rule Id="CS8313" Action="None" />
    <Rule Id="CS8321" Action="None" />
  </Rules>
  <Rules AnalyzerId="Microsoft.CodeQuality.Analyzers" RuleNamespace="Microsoft.CodeQuality.Analyzers">
    <Rule Id="CA1031" Action="Warning" /> <!-- catch specific exception or rethrow -->
    <Rule Id="CA1044" Action="None" /> <!-- write-only properties -->
    <Rule Id="CA1052" Action="None" /> <!-- Static holder types should be Static or NotInheritable -->
    <Rule Id="CA1056" Action="None" /> <!-- use System.Uri for urls -->
    <Rule Id="CA1062" Action="None" /> <!-- validate parameters of public members -->
    <Rule Id="CA1063" Action="None" /> <!-- Implement IDisposable correctly -->
    <Rule Id="CA1710" Action="None" /> <!-- collection properties should end in collection -->
    <Rule Id="CA1724" Action="None" /> <!-- type name conflicts with namespace -->
    <Rule Id="CA1802" Action="Warning" /> <!-- Use literals where appropriate -->
    <Rule Id="CA1805" Action="Warning" /> <!-- Do not initialize unnecessarily -->
    <Rule Id="CA1812" Action="None" /> <!-- internal class is never instantiated (doesn't detect container registrations) -->
    <Rule Id="CA1819" Action="None" /> <!-- Properties should not return arrays -->
    <Rule Id="CA1822" Action="None" /> <!-- member can be made static; disabled because of false positivies in middleware/owin calls -->
    <Rule Id="CA1823" Action="Error" /> <!-- unused field -->
    <Rule Id="CA1825" Action="Warning" /> <!-- Avoid zero-length array allocations -->
    <Rule Id="CA1827" Action="Warning" /> <!-- Do not use Count()/LongCount() when Any() can be used -->
    <Rule Id="CA1828" Action="Warning" /> <!-- Do not use CountAsync() when AnyAsync() can be used -->
    <Rule Id="CA1829" Action="Warning" /> <!-- Use Length/Count property instead of Count() when available -->
    <Rule Id="CA1834" Action="Warning" /> <!-- Consider using StringBuilder.Append(char) when applicable -->
    <Rule Id="CA1835" Action="Warning" /> <!-- Prefer Memory-based overloads for ReadAsync and WriteAsync -->
    <Rule Id="CA1836" Action="Warning" /> <!-- Prefer IsEmpty over Count -->
    <Rule Id="CA2000" Action="Warning" /> <!-- Dispose objects before losing scope -->
    <Rule Id="CA2002" Action="Warning" /> <!-- Do not lock on objects with weak identity -->
    <Rule Id="CA2007" Action="None" /> <!-- Consider calling ConfigureAwait on the awaited task -->
    <Rule Id="CA2008" Action="Warning" /> <!-- Do not create tasks without passing a TaskScheduler -->
    <Rule Id="CA2009" Action="Warning" /> <!-- Do not call ToImmutableCollection on an ImmutableCollection -->
    <Rule Id="CA2011" Action="Warning" /> <!-- Avoid infinite recursion -->
    <Rule Id="CA2012" Action="Warning" /> <!-- Use ValueTasks correctly -->
    <Rule Id="CA2013" Action="Warning" /> <!-- Do not use ReferenceEquals with value types -->
    <Rule Id="CA2016" Action="Warning" /> <!-- Forward the CancellationToken parameter to methods -->
    <Rule Id="CA2100" Action="Warning" /> <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2153" Action="Warning" /> <!-- Do not catch corrupted state exceptions -->
    <Rule Id="CA2227" Action="None" /> <!-- collection properties should be get only -->
    <Rule Id="CA2234" Action="None" /> <!-- catch specific exception or rethrow -->
    <Rule Id="CA3001" Action="Warning" /> <!-- Potential SQL injection vulnerability -->
    <Rule Id="CA3003" Action="Warning" /> <!-- Potential file path injection vulnerability -->
    <Rule Id="CA3006" Action="Warning" /> <!-- Potential process command injection vulnerability -->
    <Rule Id="CA3012" Action="Warning" /> <!-- Potential regex injection vulnerability -->
    <Rule Id="CA5350" Action="Warning" /> <!-- Do not use weak cryptographic algorithms -->
    <Rule Id="CA5351" Action="Warning" /> <!-- Do not use broken cryptographic algorithms -->
    <Rule Id="CA5359" Action="Warning" /> <!-- Do not disable certificate validation -->
    <Rule Id="CA5360" Action="Warning" /> <!-- Do not call dangerous methods in deserialization -->
    <Rule Id="CA5361" Action="Warning" /> <!-- Do not disable SChannel use of strong crypto -->
  </Rules>
  <Rules AnalyzerId="Microsoft.VisualStudio.Threading.Analyzers" RuleNamespace="Microsoft.VisualStudio.Threading.Analyzers">
    <Rule Id="VSTHRD100" Action="Error" /> <!-- Avoid "async void" methods, because any exceptions not handled by the method will crash the process -->
    <Rule Id="VSTHRD101" Action="Error" /> <!-- Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process -->
    <Rule Id="VSTHRD200" Action="None" /> <!-- Use "Async" suffix in names of methods that return an awaitable type -->

  </Rules>
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp.EditorFeatures" RuleNamespace="Microsoft.CodeAnalysis.CSharp.EditorFeatures">
    <Rule Id="IDE0032" Action="None" />
    <Rule Id="IDE0032WithoutSuggestion" Action="None" />
  </Rules>
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp.Features" RuleNamespace="Microsoft.CodeAnalysis.CSharp.Features">
    <Rule Id="IDE0005" Action="Warning" /> <!-- C# Using directive is unnecessary -->
    <Rule Id="IDE0005WithoutSuggestion" Action="Warning" />
    <Rule Id="IDE1005" Action="Warning" /> <!-- C# Use conditional delegate call -->
    <Rule Id="IDE1005WithoutSuggestion" Action="Warning" />
    <Rule Id="IDE0044" Action="Warning" /> <!-- make field readonly -->
  </Rules>
  <Rules AnalyzerId="Microsoft.CodeAnalysis.Features" RuleNamespace="Microsoft.CodeAnalysis.Features">
    <Rule Id="IDE0010" Action="None" />
    <Rule Id="IDE0010WithoutSuggestion" Action="None" />
    <Rule Id="IDE0033" Action="None" />
    <Rule Id="IDE0033WithoutSuggestion" Action="None" />
  </Rules>
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <Rule Id="SA0000" Action="None" />
    <Rule Id="SA0001" Action="None" />
    <Rule Id="SA1000" Action="None" />
    <Rule Id="SA1001" Action="None" />
    <Rule Id="SA1002" Action="None" />
    <Rule Id="SA1003" Action="None" /> <!-- Symbols must be spaced correctly -->
    <Rule Id="SA1004" Action="None" />
    <Rule Id="SA1005" Action="None" />
    <Rule Id="SA1006" Action="None" />
    <Rule Id="SA1007" Action="None" />
    <Rule Id="SA1008" Action="None" /> <!--An opening parenthesis within a C# statement is not spaced correctly.-->
    <Rule Id="SA1009" Action="None" /> <!--A closing parenthesis within a C# statement is not spaced correctly.-->
    <Rule Id="SA1010" Action="None" />
    <Rule Id="SA1011" Action="None" />
    <Rule Id="SA1012" Action="None" /> <!-- Opening braces should be spaced correctly -->
    <Rule Id="SA1013" Action="None" /> <!-- Closing braces should be spaced correctly -->
    <Rule Id="SA1014" Action="None" />
    <Rule Id="SA1015" Action="None" />
    <Rule Id="SA1016" Action="None" />
    <Rule Id="SA1017" Action="None" />
    <Rule Id="SA1018" Action="None" />
    <Rule Id="SA1019" Action="None" />
    <Rule Id="SA1020" Action="None" />
    <Rule Id="SA1021" Action="None" />
    <Rule Id="SA1022" Action="None" />
    <Rule Id="SA1023" Action="None" />
    <Rule Id="SA1024" Action="None" />
    <Rule Id="SA1025" Action="None" />
    <Rule Id="SA1026" Action="None" />
    <Rule Id="SA1027" Action="None" />
    <Rule Id="SA1028" Action="None" />
    <Rule Id="SA1100" Action="None" />
    <Rule Id="SA1101" Action="None" />
    <Rule Id="SA1102" Action="None" />
    <Rule Id="SA1103" Action="None" />
    <Rule Id="SA1104" Action="None" />
    <Rule Id="SA1105" Action="None" />
    <Rule Id="SA1106" Action="Error" /> <!-- CodeMustNotContainEmptyStatements | The C# code contains an extra semicolon. -->
    <Rule Id="SA1107" Action="None" />
    <Rule Id="SA1108" Action="None" />
    <Rule Id="SA1110" Action="Warning" /> <!-- OpeningParenthesisMustBeOnDeclarationLine -->
    <Rule Id="SA1111" Action="None" /> <!-- ClosingParenthesisMustBeOnLineOfLastParameter -->
    <Rule Id="SA1112" Action="None" />
    <Rule Id="SA1113" Action="None" />
    <Rule Id="SA1114" Action="None" />
    <Rule Id="SA1115" Action="None" />
    <Rule Id="SA1116" Action="Warning" /> <!-- SplitParametersMustStartOnLineAfterDeclaration -->
    <Rule Id="SA1117" Action="None" /> <!-- 	SA1117ParametersMustBeOnSameLineOrSeparateLines -->
    <Rule Id="SA1118" Action="None" />
    <Rule Id="SA1119" Action="None" />
    <Rule Id="SA1120" Action="None" />
    <Rule Id="SA1121" Action="Warning" /> <!-- UseBuiltInTypeAlias | The code uses one of the basic C# types, but does not use the built-in alias for the type.-->
    <Rule Id="SA1122" Action="None" />
    <Rule Id="SA1123" Action="None" />
    <Rule Id="SA1124" Action="Error" /> <!-- DoNotUseRegions | The C# code contains a region. -->
    <Rule Id="SA1125" Action="Error" /> <!-- UseShorthandForNullableTypes | The Nullable type has been defined not using the C# shorthand. -->
    <Rule Id="SA1127" Action="None" />
    <Rule Id="SA1128" Action="None" />
    <Rule Id="SA1129" Action="None" />
    <Rule Id="SA1130" Action="Warning" /> <!-- SA1130UseLambdaSyntax -->
    <Rule Id="SA1131" Action="None" />
    <Rule Id="SA1132" Action="None" />
    <Rule Id="SA1133" Action="None" />
    <Rule Id="SA1134" Action="None" />
    <Rule Id="SA1135" Action="None" />
    <Rule Id="SA1137" Action="Warning" />	<!--	Elements should have the same indentation -->
    <Rule Id="SA1141" Action="Error" />	<!--	UseTupleSyntax -->
    <Rule Id="SA1200" Action="None" />
    <Rule Id="SA1201" Action="None" /> <!-- ElementsMustAppearInTheCorrectOrder -->
    <Rule Id="SA1202" Action="Warning" /> <!-- Elements should be ordered by access -->
    <Rule Id="SA1203" Action="Warning" /> <!-- ConstantsMustAppearBeforeFields-->
    <Rule Id="SA1204" Action="None" />
    <Rule Id="SA1205" Action="None" />
    <Rule Id="SA1206" Action="None" />
    <Rule Id="SA1207" Action="None" />
    <Rule Id="SA1208" Action="None" />
    <Rule Id="SA1209" Action="None" />
    <Rule Id="SA1210" Action="Warning" /> <!-- UsingDirectivesMustBeOrderedAlphabeticallyByNamespace-->
    <Rule Id="SA1211" Action="None" />
    <Rule Id="SA1212" Action="None" />
    <Rule Id="SA1213" Action="None" />
    <Rule Id="SA1214" Action="None" />
    <Rule Id="SA1216" Action="None" />
    <Rule Id="SA1217" Action="None" />
    <Rule Id="SA1300" Action="Error" /> <!-- Element should begin with upper-case letter -->
    <Rule Id="SA1302" Action="Warning" /> <!-- Interface names should begin with I -->
    <Rule Id="SA1303" Action="Warning" /> <!-- Const field names should begin with upper-case letter -->
    <Rule Id="SA1304" Action="Warning" /> <!-- Non-private readonly fields should begin with upper-case letter -->
    <Rule Id="SA1305" Action="None" />
    <Rule Id="SA1306" Action="None" />
    <Rule Id="SA1307" Action="None" />
    <Rule Id="SA1308" Action="Warning" /> <!-- VariableNamesMustNotBePrefixed -->
    <Rule Id="SA1309" Action="None" />
    <Rule Id="SA1310" Action="None" />
    <Rule Id="SA1311" Action="None" />
    <Rule Id="SA1312" Action="None" /> <!-- Allow discards: using var _ = _logger.BeginScope() -->
    <Rule Id="SA1313" Action="None" /> <!-- Parameter names should begin with lower-case letter. Disabled because C#9 records have upper cased parameters -->
    <Rule Id="SA1400" Action="Warning" /> <!-- AccessModifierMustBeDeclared | The access modifier for a C# element has not been explicitly defined -->
    <Rule Id="SA1401" Action="Warning" /> <!-- FieldsMustBePrivate | A field within a C# class has an access modifier other than private -->
    <Rule Id="SA1402" Action="Warning" /> <!-- FileMayOnlyContainASingleType | A C# code file contains more than one unique type -->
    <Rule Id="SA1403" Action="Warning" /> <!-- FileMayOnlyContainASingleNamespace -->
    <Rule Id="SA1404" Action="Error" /> <!--Code analysis suppression should have justification-->
    <Rule Id="SA1405" Action="None" />
    <Rule Id="SA1406" Action="None" />
    <Rule Id="SA1407" Action="None" />
    <Rule Id="SA1408" Action="None" />
    <Rule Id="SA1409" Action="Error" /> <!-- RemoveUnnecessaryCode | A C# file contains code which is unnecessary and can be removed without changing the overall logic of the code. -->
    <Rule Id="SA1410" Action="None" />
    <Rule Id="SA1411" Action="None" />
    <Rule Id="SA1412" Action="None" />
    <Rule Id="SA1413" Action="None" />
    <Rule Id="SA1500" Action="None" />
    <Rule Id="SA1501" Action="None" />
    <Rule Id="SA1502" Action="None" />
    <Rule Id="SA1503" Action="None" />
    <Rule Id="SA1504" Action="None" />
    <Rule Id="SA1505" Action="None" />
    <Rule Id="SA1506" Action="None" />
    <Rule Id="SA1507" Action="None" /> <!-- CodeMustNotContainMultipleBlankLinesInARow | The C# code contains multiple blank lines in a row. -->
    <Rule Id="SA1508" Action="None" />
    <Rule Id="SA1509" Action="None" />
    <Rule Id="SA1510" Action="None" />
    <Rule Id="SA1511" Action="None" />
    <Rule Id="SA1512" Action="None" />
    <Rule Id="SA1513" Action="None" /> <!-- Closing brace should be followed by blank line-->
    <Rule Id="SA1514" Action="None" />
    <Rule Id="SA1515" Action="None" />
    <Rule Id="SA1516" Action="None" /> <!-- ElementsMustBeSeparatedByBlankLine -->
    <Rule Id="SA1517" Action="Error" /> <!-- CodeMustNotContainBlankLinesAtStartOfFile -->
    <Rule Id="SA1518" Action="None" /> <!-- UseLineEndingsCorrectlyAtEndOfFile | The line endings at the end of a file do not match the settings for the project. -->
    <Rule Id="SA1519" Action="None" />
    <Rule Id="SA1520" Action="Error" /> <!-- UseBracesConsistently-->
    <Rule Id="SA1600" Action="None" />
    <Rule Id="SA1601" Action="None" />
    <Rule Id="SA1602" Action="None" />
    <Rule Id="SA1604" Action="None" />
    <Rule Id="SA1605" Action="None" />
    <Rule Id="SA1606" Action="None" />
    <Rule Id="SA1607" Action="None" />
    <Rule Id="SA1608" Action="None" />
    <Rule Id="SA1610" Action="None" />
    <Rule Id="SA1611" Action="None" />
    <Rule Id="SA1612" Action="None" />
    <Rule Id="SA1613" Action="None" />
    <Rule Id="SA1614" Action="None" />
    <Rule Id="SA1615" Action="None" />
    <Rule Id="SA1616" Action="None" />
    <Rule Id="SA1617" Action="None" />
    <Rule Id="SA1618" Action="None" />
    <Rule Id="SA1619" Action="None" />
    <Rule Id="SA1620" Action="None" />
    <Rule Id="SA1621" Action="None" />
    <Rule Id="SA1622" Action="None" />
    <Rule Id="SA1623" Action="None" />
    <Rule Id="SA1624" Action="None" />
    <Rule Id="SA1625" Action="None" />
    <Rule Id="SA1626" Action="None" />
    <Rule Id="SA1627" Action="None" />
    <Rule Id="SA1633" Action="None" />
    <Rule Id="SA1634" Action="None" />
    <Rule Id="SA1635" Action="None" />
    <Rule Id="SA1636" Action="None" />
    <Rule Id="SA1637" Action="None" />
    <Rule Id="SA1638" Action="None" />
    <Rule Id="SA1640" Action="None" />
    <Rule Id="SA1641" Action="None" />
    <Rule Id="SA1642" Action="None" />
    <Rule Id="SA1643" Action="None" />
    <Rule Id="SA1648" Action="None" />
    <Rule Id="SA1649" Action="None" />
    <Rule Id="SA1651" Action="None" />
    <Rule Id="SA1652" Action="None" />
    <Rule Id="SX1309" Action="Error" /> <!-- FieldNamesMustBeginWithUnderscore-->
  </Rules>

  <Rules AnalyzerId="IDisposableAnalyzers" RuleNamespace="IDisposableAnalyzers">
    <Rule Id="IDISP013" Action="None" /> <!-- await in using can be ignored most of the time -->
  </Rules>

  <Rules AnalyzerId="Microsoft.AspNetCore.Mvc.Api.Analyzers" RuleNamespace="Microsoft.AspNetCore.Mvc.Api.Analyzers">
    <Rule Id="API1000" Action="Error" />  <!-- Return result is undeclared -->
  </Rules>

</RuleSet>
